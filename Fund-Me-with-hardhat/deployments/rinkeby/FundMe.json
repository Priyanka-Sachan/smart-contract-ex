{
  "address": "0x7C6E9d521783308095a55aA90CA9AeA75FBc45bF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_FUND_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fundMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x32f108bac49553d2c53cfc4c3a63d147542fd4151b80c1bfd1665426c5b90bee",
  "receipt": {
    "to": null,
    "from": "0x545138e4b8590E2DF8785390bd725D4c07Cc8713",
    "contractAddress": "0x7C6E9d521783308095a55aA90CA9AeA75FBc45bF",
    "transactionIndex": 6,
    "gasUsed": "900661",
    "logsBloom": "0x
    "blockHash": "0xb102dcdc2cf50aa963c920f3850be516b079e3121ba553ada0f22f85b0e4810f",
    "transactionHash": "0x32f108bac49553d2c53cfc4c3a63d147542fd4151b80c1bfd1665426c5b90bee",
    "logs": [],
    "blockNumber": 10914262,
    "cumulativeGasUsed": "10957770",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "97db178f8312399c79754cb9aec3f5a5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_FUND_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundMapping\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity >=0.8.1 <0.9.0;\\n\\nimport \\\"./PriceConvertor.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConvertor for uint256;\\n\\n    uint256 public constant MIN_FUND_USD = 50 * 10**18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public fundMapping;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // Adding arguemnts to ge priceFeed according to network we are on\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getUsdValue(priceFeed) >= MIN_FUND_USD,\\n            \\\"Didn't send enough fund!\\\"\\n        );\\n        funders.push(msg.sender);\\n        fundMapping[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public authenticate {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            fundMapping[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Payment failed.\\\");\\n    }\\n\\n    modifier authenticate() {\\n        require(msg.sender == i_owner, \\\"You are not owner.\\\");\\n        _;\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x14c305a9f014490ba1a1dfd7db163483889f90268ab8c6764212fe6bab03742c\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity >=0.8.1 <0.9.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getConversionRate(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Access contract on rinkeby network using its contract address on that network & ABI/interface class from npm\\n        (\\n            ,\\n            /*uint80 roundID*/\\n            int256 price, /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n        return uint256(price * 10**10);\\n    }\\n\\n    function getUsdValue(uint256 _value, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return (getConversionRate(priceFeed) * _value) / 1e18;\\n    }\\n}\\n\",\"keccak256\":\"0xccffe8344d999aff095c10c3621cdf58512e6e53838f39c7e6e374773d563280\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010523803806200105283398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610eea62000168600039600081816102f3015261057a0152610eea6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80632a90c5fb1461008d5780633ccfd60b146100b85780633e123b14146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b6040516100af919061076c565b60405180910390f35b3480156100c457600080fd5b506100cd6102f1565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ea565b61053a565b604051610103919061076c565b60405180910390f35b34801561011857600080fd5b50610121610552565b60405161012e9190610876565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610578565b60405161016391906108a0565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e7565b61059c565b6040516101a091906108a0565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105db90919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610971565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109c0565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037690610a62565b60405180910390fd5b60005b60008054905081101561042a5760008082815481106103a4576103a3610a82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042290610ab1565b915050610382565b50600067ffffffffffffffff81111561044657610445610afa565b5b6040519080825280602002602001820160405280156104745781602001602082028036833780820191505090505b506000908051906020019061048a9291906106ac565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b190610b5a565b60006040518083038185875af1925050503d80600081146104ee576040519150601f19603f3d011682016040523d82523d6000602084013e6104f3565b606091505b5050905080610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e90610bbb565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105ac57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a7640000836105f08461060c565b6105fa9190610bdb565b6106049190610c64565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610d22565b5050509150506402540be400816106a49190610d9d565b915050919050565b828054828255906000526020600020908101928215610725579160200282015b828111156107245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cc565b5b5090506107329190610736565b5090565b5b8082111561074f576000816000905550600101610737565b5090565b6000819050919050565b61076681610753565b82525050565b6000602082019050610781600083018461075d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b78261078c565b9050919050565b6107c7816107ac565b81146107d257600080fd5b50565b6000813590506107e4816107be565b92915050565b600060208284031215610800576107ff610787565b5b600061080e848285016107d5565b91505092915050565b6000819050919050565b600061083c6108376108328461078c565b610817565b61078c565b9050919050565b600061084e82610821565b9050919050565b600061086082610843565b9050919050565b61087081610855565b82525050565b600060208201905061088b6000830184610867565b92915050565b61089a816107ac565b82525050565b60006020820190506108b56000830184610891565b92915050565b6108c481610753565b81146108cf57600080fd5b50565b6000813590506108e1816108bb565b92915050565b6000602082840312156108fd576108fc610787565b5b600061090b848285016108d2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682066756e64210000000000000000600082015250565b600061095b601883610914565b915061096682610925565b602082019050919050565b6000602082019050818103600083015261098a8161094e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cb82610753565b91506109d683610753565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0b57610a0a610991565b5b828201905092915050565b7f596f7520617265206e6f74206f776e65722e0000000000000000000000000000600082015250565b6000610a4c601283610914565b9150610a5782610a16565b602082019050919050565b60006020820190508181036000830152610a7b81610a3f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abc82610753565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aef57610aee610991565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b44600083610b29565b9150610b4f82610b34565b600082019050919050565b6000610b6582610b37565b9150819050919050565b7f5061796d656e74206661696c65642e0000000000000000000000000000000000600082015250565b6000610ba5600f83610914565b9150610bb082610b6f565b602082019050919050565b60006020820190508181036000830152610bd481610b98565b9050919050565b6000610be682610753565b9150610bf183610753565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2a57610c29610991565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c6f82610753565b9150610c7a83610753565b925082610c8a57610c89610c35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cb481610c95565b8114610cbf57600080fd5b50565b600081519050610cd181610cab565b92915050565b6000819050919050565b610cea81610cd7565b8114610cf557600080fd5b50565b600081519050610d0781610ce1565b92915050565b600081519050610d1c816108bb565b92915050565b600080600080600060a08688031215610d3e57610d3d610787565b5b6000610d4c88828901610cc2565b9550506020610d5d88828901610cf8565b9450506040610d6e88828901610d0d565b9350506060610d7f88828901610d0d565b9250506080610d9088828901610cc2565b9150509295509295909350565b6000610da882610cd7565b9150610db383610cd7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610df257610df1610991565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e2f57610e2e610991565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6c57610e6b610991565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ea957610ea8610991565b5b82820290509291505056fea2646970667358221220ed58e0a2fb5bbb7c1c91537f247bd3ccebd668afe4f9ec4b8b22b9cc4cf8377564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80632a90c5fb1461008d5780633ccfd60b146100b85780633e123b14146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b6040516100af919061076c565b60405180910390f35b3480156100c457600080fd5b506100cd6102f1565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ea565b61053a565b604051610103919061076c565b60405180910390f35b34801561011857600080fd5b50610121610552565b60405161012e9190610876565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610578565b60405161016391906108a0565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108e7565b61059c565b6040516101a091906108a0565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105db90919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610971565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109c0565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037690610a62565b60405180910390fd5b60005b60008054905081101561042a5760008082815481106103a4576103a3610a82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042290610ab1565b915050610382565b50600067ffffffffffffffff81111561044657610445610afa565b5b6040519080825280602002602001820160405280156104745781602001602082028036833780820191505090505b506000908051906020019061048a9291906106ac565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b190610b5a565b60006040518083038185875af1925050503d80600081146104ee576040519150601f19603f3d011682016040523d82523d6000602084013e6104f3565b606091505b5050905080610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e90610bbb565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105ac57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a7640000836105f08461060c565b6105fa9190610bdb565b6106049190610c64565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610d22565b5050509150506402540be400816106a49190610d9d565b915050919050565b828054828255906000526020600020908101928215610725579160200282015b828111156107245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cc565b5b5090506107329190610736565b5090565b5b8082111561074f576000816000905550600101610737565b5090565b6000819050919050565b61076681610753565b82525050565b6000602082019050610781600083018461075d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b78261078c565b9050919050565b6107c7816107ac565b81146107d257600080fd5b50565b6000813590506107e4816107be565b92915050565b600060208284031215610800576107ff610787565b5b600061080e848285016107d5565b91505092915050565b6000819050919050565b600061083c6108376108328461078c565b610817565b61078c565b9050919050565b600061084e82610821565b9050919050565b600061086082610843565b9050919050565b61087081610855565b82525050565b600060208201905061088b6000830184610867565b92915050565b61089a816107ac565b82525050565b60006020820190506108b56000830184610891565b92915050565b6108c481610753565b81146108cf57600080fd5b50565b6000813590506108e1816108bb565b92915050565b6000602082840312156108fd576108fc610787565b5b600061090b848285016108d2565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682066756e64210000000000000000600082015250565b600061095b601883610914565b915061096682610925565b602082019050919050565b6000602082019050818103600083015261098a8161094e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cb82610753565b91506109d683610753565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0b57610a0a610991565b5b828201905092915050565b7f596f7520617265206e6f74206f776e65722e0000000000000000000000000000600082015250565b6000610a4c601283610914565b9150610a5782610a16565b602082019050919050565b60006020820190508181036000830152610a7b81610a3f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abc82610753565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610aef57610aee610991565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b44600083610b29565b9150610b4f82610b34565b600082019050919050565b6000610b6582610b37565b9150819050919050565b7f5061796d656e74206661696c65642e0000000000000000000000000000000000600082015250565b6000610ba5600f83610914565b9150610bb082610b6f565b602082019050919050565b60006020820190508181036000830152610bd481610b98565b9050919050565b6000610be682610753565b9150610bf183610753565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2a57610c29610991565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c6f82610753565b9150610c7a83610753565b925082610c8a57610c89610c35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cb481610c95565b8114610cbf57600080fd5b50565b600081519050610cd181610cab565b92915050565b6000819050919050565b610cea81610cd7565b8114610cf557600080fd5b50565b600081519050610d0781610ce1565b92915050565b600081519050610d1c816108bb565b92915050565b600080600080600060a08688031215610d3e57610d3d610787565b5b6000610d4c88828901610cc2565b9550506020610d5d88828901610cf8565b9450506040610d6e88828901610d0d565b9350506060610d7f88828901610d0d565b9250506080610d9088828901610cc2565b9150509295509295909350565b6000610da882610cd7565b9150610db383610cd7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610df257610df1610991565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e2f57610e2e610991565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6c57610e6b610991565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ea957610ea8610991565b5b82820290509291505056fea2646970667358221220ed58e0a2fb5bbb7c1c91537f247bd3ccebd668afe4f9ec4b8b22b9cc4cf8377564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "fundMapping",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}