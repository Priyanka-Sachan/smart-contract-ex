const ethers = require("ethers");
const fs = require("fs-extra");
require("dotenv").config();

async function main() {

  // Connect to our node i.e. (http://0.0.0.0:7545 in ganache/Javascript VM) or RPC url by Alchemy/Injected Web 3. 
  const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL);

  // Connect with wallet with private key using provider
  const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
  // Secure private keys using encrypted key and password
  // const encryptedJson = fs.readFileSync("./.encryptedKey.json", "utf8");
  // let wallet = new ethers.Wallet.fromEncryptedJsonSync(
  //   encryptedJson,
  //   process.env.PRIVATE_KEY_PASSWORD
  // );
  // wallet = wallet.connect(provider);

  const abi = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8");
  const binary = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.bin", "utf8");

  const contractFactory = new ethers.ContractFactory(abi, binary, wallet);
  console.log("Deploying...please wait.");

  // Can also add other overrides like gasLimit to contract
  const contract = await contractFactory.deploy();
  console.log(contract.deployTransaction);

  // If want confirmations if contract is added to chain (arguement is no. of block confirmtions required)
  const deploymentReceipt = await contract.deployTransaction.wait(1);
  // console.log(deploymentReceipt);

  // Deploy with only transaction data
  // const nonce=await wallet.getTransactionCount();
  // const tx = {
  //   nonce: nonce,
  //   gasPrice: 20000000000,
  //   gasLimit: 1000000,
  //   to: null,
  //   value: 0,
  //   data: "0x608060405234801561001057600080fd5b50610ad7806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806352a3b2ef1161005b57806352a3b2ef146100fe5780636f760f411461011c5780639e7a13ad14610138578063c8de710b146101695761007d565b80630bd89149146100825780633a7531fc146100b257806341bb839c146100ce575b600080fd5b61009c600480360381019061009791906103fe565b610187565b6040516100a99190610464565b60405180910390f35b6100cc60048036038101906100c791906104ab565b6101b2565b005b6100e860048036038101906100e39190610619565b6101bc565b6040516100f59190610464565b60405180910390f35b6101066101ea565b6040516101139190610464565b60405180910390f35b61013660048036038101906101319190610662565b6101f3565b005b610152600480360381019061014d91906104ab565b6102c3565b60405161016092919061074a565b60405180910390f35b61017161037f565b60405161017e9190610464565b60405180910390f35b60006002838360405161019b9291906107aa565b908152602001604051809103902054905092915050565b8060008190555050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b60008054905090565b6001604051806040016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001838152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161028c91906109cf565b5060208201518160010155505080600284846040516102ac9291906107aa565b908152602001604051809103902081905550505050565b600181815481106102d357600080fd5b90600052602060002090600202016000915090508060000180546102f6906107f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610322906107f2565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050908060010154905082565b60005481565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126103be576103bd610399565b5b8235905067ffffffffffffffff8111156103db576103da61039e565b5b6020830191508360018202830111156103f7576103f66103a3565b5b9250929050565b600080602083850312156104155761041461038f565b5b600083013567ffffffffffffffff81111561043357610432610394565b5b61043f858286016103a8565b92509250509250929050565b6000819050919050565b61045e8161044b565b82525050565b60006020820190506104796000830184610455565b92915050565b6104888161044b565b811461049357600080fd5b50565b6000813590506104a58161047f565b92915050565b6000602082840312156104c1576104c061038f565b5b60006104cf84828501610496565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610526826104dd565b810181811067ffffffffffffffff82111715610545576105446104ee565b5b80604052505050565b6000610558610385565b9050610564828261051d565b919050565b600067ffffffffffffffff821115610584576105836104ee565b5b61058d826104dd565b9050602081019050919050565b82818337600083830152505050565b60006105bc6105b784610569565b61054e565b9050828152602081018484840111156105d8576105d76104d8565b5b6105e384828561059a565b509392505050565b600082601f830112610600576105ff610399565b5b81356106108482602086016105a9565b91505092915050565b60006020828403121561062f5761062e61038f565b5b600082013567ffffffffffffffff81111561064d5761064c610394565b5b610659848285016105eb565b91505092915050565b60008060006040848603121561067b5761067a61038f565b5b600084013567ffffffffffffffff81111561069957610698610394565b5b6106a5868287016103a8565b935093505060206106b886828701610496565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156106fc5780820151818401526020810190506106e1565b8381111561070b576000848401525b50505050565b600061071c826106c2565b61072681856106cd565b93506107368185602086016106de565b61073f816104dd565b840191505092915050565b600060408201905081810360008301526107648185610711565b90506107736020830184610455565b9392505050565b600081905092915050565b6000610791838561077a565b935061079e83858461059a565b82840190509392505050565b60006107b7828486610785565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061080a57607f821691505b60208210810361081d5761081c6107c3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610848565b61088f8683610848565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108cc6108c76108c28461044b565b6108a7565b61044b565b9050919050565b6000819050919050565b6108e6836108b1565b6108fa6108f2826108d3565b848454610855565b825550505050565b600090565b61090f610902565b61091a8184846108dd565b505050565b5b8181101561093e57610933600082610907565b600181019050610920565b5050565b601f8211156109835761095481610823565b61095d84610838565b8101602085101561096c578190505b61098061097885610838565b83018261091f565b50505b505050565b600082821c905092915050565b60006109a660001984600802610988565b1980831691505092915050565b60006109bf8383610995565b9150826002028217905092915050565b6109d8826106c2565b67ffffffffffffffff8111156109f1576109f06104ee565b5b6109fb82546107f2565b610a06828285610942565b600060209050601f831160018114610a395760008415610a27578287015190505b610a3185826109b3565b865550610a99565b601f198416610a4786610823565b60005b82811015610a6f57848901518255600182019150602085019450602081019050610a4a565b86831015610a8c5784890151610a88601f891682610995565b8355505b6001600288020188555050505b50505050505056fea264697066735822122064da34b3c669fb592132d46759124c05a91fc47e9c56170cd77b9ecf67aa921764736f6c634300080f0033",
  //   chainId: 1337,
  // };
  // const sentTxResponse = await wallet.sendTransaction(tx);
  // await sentTxResponse.wait(1);
  // console.log(sentTxResponse);

  const allFavouriteNumber = await contract.allFavouriteNumber();
  console.log(`AllFavouriteNumber: ${allFavouriteNumber.toString()}`);

  const txResponse = await contract.setAllFavouriteNumber("9");
  const txReceipt = await txResponse.wait(1);
  const updatedAllFavouriteNumber = await contract.allFavouriteNumber();
  console.log(`UpdatedAllFavouriteNumber: ${updatedAllFavouriteNumber.toString()}`);

}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });